#include "leet.cpp"

#include <gtest/gtest.h>

#include <cassert>

#include "glog/logging.h"
#include "glog/stl_logging.h"

TEST(kk, t1) {
  Solution sol;
  vector<int> nums = {2, 1, 3};
  EXPECT_EQ(sol.numOfWays(nums), 1);
}

TEST(kk, t2) {
  Solution sol;
  vector<int> nums = {3, 4, 5, 1, 2};
  EXPECT_EQ(sol.numOfWays(nums), 5);
}

TEST(kk, t3) {
  Solution sol;
  vector<int> nums = {1, 2, 3};
  EXPECT_EQ(sol.numOfWays(nums), 0);
}

TEST(kk, t4) {
  Solution sol;
  vector<int> nums = {3, 1, 2, 5, 4, 6};
  EXPECT_EQ(sol.numOfWays(nums), 19);
}

TEST(kk, t5) {
  Solution sol;
  vector<int> nums = {9,  4,  2,  1,  3,  6,  5,  7,  8,
                      14, 11, 10, 12, 13, 16, 15, 17, 18};
  EXPECT_EQ(sol.numOfWays(nums), 216212978);
}

TEST(kk, t6) {
  Solution sol;
  vector<int> nums = {
      412, 502, 456, 621, 627, 449, 353, 221, 42,  561, 95,  455, 427, 329, 548,
      179, 133, 25,  652, 287, 160, 366, 641, 731, 53,  323, 164, 312, 341, 61,
      438, 40,  305, 534, 58,  759, 298, 255, 536, 225, 93,  466, 27,  367, 697,
      747, 761, 336, 771, 701, 441, 213, 513, 630, 345, 442, 346, 11,  587, 200,
      657, 581, 671, 703, 24,  74,  465, 110, 576, 589, 330, 216, 726, 107, 87,
      243, 106, 577, 356, 694, 484, 290, 420, 448, 415, 439, 434, 342, 639, 676,
      201, 789, 156, 372, 261, 606, 612, 720, 226, 18,  128, 734, 592, 401, 423,
      512, 273, 39,  149, 46,  130, 395, 638, 282, 112, 523, 139, 443, 665, 52,
      500, 115, 588, 219, 49,  119, 83,  234, 504, 317, 308, 648, 659, 786, 762,
      121, 574, 718, 489, 382, 169, 138, 563, 71,  528, 91,  593, 360, 696, 607,
      428, 10,  405, 320, 717, 252, 41,  300, 735, 774, 357, 185, 389, 431, 251,
      277, 506, 16,  476, 396, 117, 634, 152, 425, 564, 459, 471, 410, 776, 586,
      739, 642, 153, 772, 643, 474, 668, 293, 281, 727, 147, 81,  15,  623, 337,
      745, 573, 363, 173, 544, 482, 533, 553, 331, 653, 65,  256, 617, 714, 198,
      435, 84,  754, 636, 324, 629, 294, 319, 14,  394, 299, 190, 150, 532, 170,
      92,  338, 223, 180, 315, 542, 650, 600, 141, 393, 318, 62,  529, 458, 361,
      240, 628, 286, 390, 421, 669, 376, 272, 558, 616, 343, 672, 406, 591, 392,
      171, 472, 263, 599, 218, 314, 624, 244, 186, 297, 80,  732, 721, 556, 327,
      183, 567, 635, 436, 68,  492, 276, 67,  177, 380, 516, 615, 757, 132, 103,
      328, 174, 400, 285, 191, 644, 344, 129, 57,  631, 88,  229, 235, 404, 700,
      685, 262, 30,  549, 571, 499, 530, 303, 426, 570, 267, 647, 54,  358, 85,
      301, 75,  407, 748, 199, 503, 220, 379, 677, 649, 521, 620, 750, 552, 242,
      306, 626, 468, 355, 143, 651, 461, 768, 385, 580, 120, 509, 4,   163, 184,
      56,  424, 175, 260, 386, 569, 452, 614, 538, 364, 598, 690, 656, 8,   399,
      375, 211, 755, 126, 560, 231, 566, 437, 595, 758, 13,  633, 69,  44,  610,
      738, 519, 590, 151, 296, 349, 348, 613, 658, 787, 275, 711, 159, 99,  525,
      543, 365, 332, 307, 594, 371, 289, 485, 214, 237, 238, 702, 764, 208, 413,
      123, 684, 302, 340, 207, 723, 645, 557, 258, 469, 741, 693, 537, 679, 3,
      326, 767, 411, 565, 271, 233, 688, 554, 210, 704, 585, 462, 135, 70,  136,
      582, 241, 187, 535, 397, 670, 709, 763, 715, 495, 675, 102, 94,  464, 663,
      481, 48,  274, 254, 770, 508, 257, 29,  189, 766, 157, 66,  96,  491, 779,
      655, 507, 373, 637, 31,  524, 250, 609, 520, 127, 625, 724, 604, 204, 325,
      359, 712, 193, 725, 374, 334, 596, 206, 433, 475, 603, 430, 784, 232, 713,
      249, 228, 384, 9,   673, 640, 166, 402, 687, 478, 460, 38,  619, 335, 295,
      203, 227, 387, 681, 531, 447, 239, 422, 660, 142, 28,  746, 706, 196, 205,
      352, 547, 744, 546, 111, 705, 522, 158, 692, 280, 60,  445, 168, 773, 36,
      751, 572, 146, 450, 313, 339, 418, 26,  682, 37,  749, 716, 122, 162, 215,
      100, 195, 101, 291, 161, 73,  77,  19,  707, 695, 351, 140, 618, 490, 109,
      777, 32,  584, 414, 284, 678, 686, 467, 253, 511, 35,  454, 246, 316, 654,
      114, 781, 722, 753, 354, 730, 172, 113, 178, 202, 368, 498, 2,   131, 486,
      708, 487, 391, 64,  63,  527, 575, 440, 510, 76,  719, 388, 381, 457, 496,
      148, 155, 20,  743, 488, 369, 264, 783, 278, 568, 90,  551, 605, 555, 664,
      698, 736, 737, 134, 55,  729, 322, 105, 611, 680, 370, 756, 98,  7,   165,
      419, 578, 453, 515, 1,   446, 268, 144, 230, 104, 86,  429, 622, 517, 23,
      497, 182, 265, 79,  377, 248, 760, 236, 209, 545, 212, 769, 689, 304, 269,
      601, 740, 788, 632, 137, 608, 197, 12,  541, 21,  494, 383, 347, 550, 97,
      539, 222, 247, 116, 785, 752, 559, 728, 279, 321, 403, 125, 124, 790, 378,
      224, 333, 646, 118, 477, 501, 479, 733, 470, 416, 710, 562, 43,  59,  661,
      154, 778, 362, 583, 667, 514, 463, 662, 292, 47,  266, 775, 505, 444, 50,
      192, 309, 194, 6,   742, 432, 518, 683, 780, 176, 493, 350, 33,  259, 245,
      188, 310, 51,  82,  270, 579, 691, 451, 288, 22,  417, 597, 473, 72,  5,
      283, 782, 34,  408, 217, 540, 167, 181, 483, 145, 311, 409, 602, 699, 78,
      108, 666, 45,  674, 526, 765, 480, 89,  398, 17};
  EXPECT_EQ(sol.numOfWays(nums), 447205470);
}

